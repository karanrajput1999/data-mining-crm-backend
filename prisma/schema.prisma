// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  email    String @unique
  password String
  agentMobile String? @unique
  token    Int      @default(0)
  campaigns Campaign[]
  users   Json?
  roleId Int
  adminId Int?
  isActive Int      @default(0)
  userIp   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Campaign {
  id Int @id @default(autoincrement())
  campaignName String
  campaignDescription String
  campaignType String
  callback Int @default(0)
  dnc Int @default(0)
  amd Int @default(0)
  crmFields CRMField[]
  admin User? @relation(fields: [adminId], references: [id])
  adminId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

}

model CRMField{
  id Int @id @default(autoincrement())
  caption String 
  type String
  required Boolean
  readOnly Boolean
  position Int
  campaignId Int?
  campaign Campaign? @relation(fields: [campaignId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

}

model Menu{
  id Int @id @default(autoincrement())
  menuLableId String
  label String
  icon String
  link String
  status Int
  sequence Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
 
}

model SubMenu {
  id Int @id @default(autoincrement())
  submenuLableId String
  label String
  parentId String
  link String
  status Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
}

model SubMenuAssign{
  id Int @id @default(autoincrement())
  menuId Int
  status Int
  subMenuId Int
  roleId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Role {
  id Int @id @default(autoincrement())
  name String
  status Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model RoleAssign{
  id Int @id @default(autoincrement())
  roleId Int
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

